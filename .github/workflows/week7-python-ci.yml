name: Week 7 Python CI

on:
  # Manual trigger
  workflow_dispatch:

  # Automatically on PRs touching week07
  pull_request:
    paths:
      - "python/week07/**"

  # Automatically on pushes to main touching week07
  push:
    branches:
      - main
    paths:
      - "python/week07/**"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      # Product DB container
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        # Make pg_isready available so the service is healthy before tests run
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      # Order DB
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    # Define a strategy to run the job for each Python version
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      # 1. Checkout the entire repository
      - uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 3. Install dependencies for *each* microservice in week07
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Loop through each backend service folder under week07
          for req in python/week07/backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          # Install CI tools
          pip install isort flake8 pytest

      # 4. Verify import ordering
      - name: Check import order with isort
        run: isort --check-only python/week07/backend

      # 5. Lint with flake8
      - name: Lint with flake8
        run: flake8 python/week07/backend
      
      - name: Run product_service tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest python/week07/backend/product_service/tests \
            --maxfail=1 --disable-warnings -q
      
      - name: Run order_service tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest python/week07/backend/order_service/tests \
            --maxfail=1 --disable-warnings -q

